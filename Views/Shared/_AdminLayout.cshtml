<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - OPROZ Admin Dashboard</title>
    
    <!-- SEO Meta Tags -->
    <meta name="description" content="OPROZ Admin Dashboard - Comprehensive administration panel for managing your SaaS platform" />
    <meta name="robots" content="noindex, nofollow" />
    
    <!-- Preload Critical Resources -->
    <link rel="preload" href="~/css/site.css" as="style" onload="this.onload=null;this.rel='stylesheet'">
    <noscript><link rel="stylesheet" href="~/css/site.css"></noscript>
    
    <!-- Favicon -->
    <link rel="icon" href="data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='.9em' font-size='90'>ðŸ”§</text></svg>">
    
    <!-- Bootstrap 5.3 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Bootstrap Icons -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css" rel="stylesheet">
    <!-- Custom Admin CSS -->
    <link rel="stylesheet" href="~/css/admin.css" asp-append-version="true" />
    
    <style>
        :root {
            --primary-color: #0d6efd;
            --sidebar-width: 280px;
            --sidebar-collapsed-width: 80px;
            --navbar-height: 70px;
            --sidebar-bg: #212529;
            --sidebar-hover: #343a40;
            --content-bg: #f8f9fa;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: var(--content-bg);
        }

        /* Admin Navbar */
        .admin-navbar {
            background: linear-gradient(135deg, #212529 0%, #343a40 100%);
            height: var(--navbar-height);
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            z-index: 1030;
        }

        /* Sidebar */
        .admin-sidebar {
            position: fixed;
            top: var(--navbar-height);
            left: 0;
            width: var(--sidebar-width);
            height: calc(100vh - var(--navbar-height));
            background: var(--sidebar-bg);
            transition: all 0.3s ease;
            z-index: 1020;
            overflow-y: auto;
            scrollbar-width: thin;
            scrollbar-color: #495057 var(--sidebar-bg);
        }

        .admin-sidebar::-webkit-scrollbar {
            width: 6px;
        }

        .admin-sidebar::-webkit-scrollbar-track {
            background: var(--sidebar-bg);
        }

        .admin-sidebar::-webkit-scrollbar-thumb {
            background: #495057;
            border-radius: 3px;
        }

        .sidebar-collapsed .admin-sidebar {
            width: var(--sidebar-collapsed-width);
        }

        /* Sidebar Navigation */
        .sidebar-nav {
            padding: 1rem 0;
        }

        .nav-item {
            margin-bottom: 0.25rem;
        }

        .nav-link {
            color: #adb5bd !important;
            padding: 0.75rem 1.5rem;
            border-radius: 0;
            display: flex;
            align-items: center;
            transition: all 0.2s ease;
            text-decoration: none;
            border-left: 3px solid transparent;
        }

        .nav-link:hover {
            background-color: var(--sidebar-hover);
            color: #fff !important;
            border-left-color: var(--primary-color);
        }

        .nav-link.active {
            background-color: var(--sidebar-hover);
            color: #fff !important;
            border-left-color: var(--primary-color);
        }

        .nav-link i {
            font-size: 1.1rem;
            margin-right: 0.75rem;
            width: 20px;
            text-align: center;
            transition: all 0.2s ease;
        }

        /* Submenu */
        .nav-submenu {
            background-color: rgba(0,0,0,0.2);
            max-height: 0;
            overflow: hidden;
            transition: all 0.3s ease;
        }

        .nav-submenu.show {
            max-height: 500px;
        }

        .nav-submenu .nav-link {
            padding: 0.5rem 1.5rem 0.5rem 3.5rem;
            font-size: 0.9rem;
        }

        .nav-submenu .nav-link i {
            font-size: 0.9rem;
            margin-right: 0.5rem;
        }

        /* Toggle Button */
        .nav-toggle {
            background: none;
            border: none;
            color: #adb5bd;
            font-size: 1.2rem;
            padding: 0.5rem;
            border-radius: 0.375rem;
            transition: all 0.2s ease;
        }

        .nav-toggle:hover {
            color: #fff;
            background-color: var(--sidebar-hover);
        }

        /* Main Content */
        .admin-content {
            margin-left: var(--sidebar-width);
            padding: 2rem;
            min-height: calc(100vh - var(--navbar-height));
            transition: all 0.3s ease;
        }

        .sidebar-collapsed .admin-content {
            margin-left: var(--sidebar-collapsed-width);
        }

        /* Cards */
        .card {
            border: none;
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
            border-radius: 0.5rem;
            margin-bottom: 1.5rem;
        }

        .card-header {
            background-color: #fff;
            border-bottom: 1px solid #dee2e6;
            padding: 1rem 1.5rem;
            border-radius: 0.5rem 0.5rem 0 0 !important;
        }

        /* Breadcrumb */
        .breadcrumb {
            background: none;
            padding: 0;
            margin-bottom: 1.5rem;
        }

        .breadcrumb-item + .breadcrumb-item::before {
            content: ">";
            color: #6c757d;
        }

        /* Responsive */
        @@media (max-width: 768px) {
            .admin-sidebar {
                transform: translateX(-100%);
            }

            .admin-sidebar.show {
                transform: translateX(0);
            }

            .admin-content {
                margin-left: 0;
                padding: 1rem;
            }

            .sidebar-collapsed .admin-content {
                margin-left: 0;
            }
        }

        /* Modern Alerts */
        .alert {
            border: none;
            border-radius: 0.5rem;
            border-left: 4px solid;
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        }

        .alert-success {
            border-left-color: #198754;
        }

        .alert-danger {
            border-left-color: #dc3545;
        }

        .alert-info {
            border-left-color: #0dcaf0;
        }

        .alert-warning {
            border-left-color: #ffc107;
        }

        /* Tables */
        .table {
            background: white;
            border-radius: 0.5rem;
            overflow: hidden;
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        }

        .table thead th {
            background-color: #f8f9fa;
            border: none;
            font-weight: 600;
            color: #495057;
            padding: 1rem;
        }

        .table tbody td {
            padding: 1rem;
            border-color: #f8f9fa;
        }

        /* Buttons */
        .btn {
            border-radius: 0.375rem;
            padding: 0.5rem 1rem;
            font-weight: 500;
            transition: all 0.2s ease;
        }

        .btn-sm {
            padding: 0.25rem 0.5rem;
            font-size: 0.875rem;
        }

        /* Form Controls */
        .form-control, .form-select {
            border-radius: 0.375rem;
            border: 1px solid #ced4da;
            padding: 0.5rem 1rem;
        }

        .form-control:focus, .form-select:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 0.2rem rgba(13, 110, 253, 0.25);
        }

        /* Page Title */
        .page-title {
            font-size: 1.75rem;
            font-weight: 600;
            color: #212529;
            margin-bottom: 0.5rem;
        }

        .page-subtitle {
            color: #6c757d;
            margin-bottom: 1.5rem;
        }

        /* Loading Overlay */
        .loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(255, 255, 255, 0.8);
            display: none;
            justify-content: center;
            align-items: center;
            z-index: 9999;
        }

        .loading-spinner {
            width: 3rem;
            height: 3rem;
        }

        /* Collapsed sidebar text hidden */
        .sidebar-collapsed .nav-link span:not(.nav-icon) {
            display: none;
        }

        .sidebar-collapsed .nav-submenu {
            display: none;
        }
    </style>
</head>
<body>
    <!-- Loading Overlay -->
    <div class="loading-overlay" id="loadingOverlay">
        <div class="spinner-border loading-spinner text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>

    <!-- Admin Navbar -->
    <nav class="navbar navbar-expand-lg admin-navbar fixed-top">
        <div class="container-fluid">
            <button class="nav-toggle me-3" type="button" id="sidebarToggle">
                <i class="bi bi-list"></i>
            </button>
            
            <a class="navbar-brand text-white fw-bold d-flex align-items-center" href="@Url.Action("Index", "Admin")">
                <i class="bi bi-gear-fill me-2"></i>
                OPROZ Admin
            </a>

            <div class="navbar-nav ms-auto d-flex flex-row">
                <div class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white d-flex align-items-center" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown">
                        <i class="bi bi-person-circle me-2"></i>
                        <span class="d-none d-md-inline">@User.Identity?.Name</span>
                    </a>
                    <ul class="dropdown-menu dropdown-menu-end">
                        <li><a class="dropdown-item" href="@Url.Action("Index", "Home")"><i class="bi bi-house me-2"></i>Go to Site</a></li>
                        <li><a class="dropdown-item" href="#"><i class="bi bi-person me-2"></i>Profile</a></li>
                        <li><a class="dropdown-item" href="#"><i class="bi bi-gear me-2"></i>Settings</a></li>
                        <li><hr class="dropdown-divider"></li>
                        <li>
                            <form asp-controller="Account" asp-action="Logout" method="post" class="d-inline">
                                <button type="submit" class="dropdown-item">
                                    <i class="bi bi-box-arrow-right me-2"></i>Logout
                                </button>
                            </form>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </nav>

    <!-- Sidebar -->
    <div class="admin-sidebar">
        <ul class="nav flex-column sidebar-nav">
            <!-- Dashboard -->
            <li class="nav-item">
                <a class="nav-link @(ViewContext.RouteData.Values["Action"]?.ToString() == "Index" && ViewContext.RouteData.Values["Controller"]?.ToString() == "Admin" ? "active" : "")" 
                   href="@Url.Action("Index", "Admin")">
                    <i class="bi bi-speedometer2"></i>
                    <span>Dashboard</span>
                </a>
            </li>

            <!-- Master Setup Menu -->
            <li class="nav-item">
                <a class="nav-link" href="#" onclick="toggleSubmenu('masterSetupSubmenu')">
                    <i class="bi bi-gear-wide-connected"></i>
                    <span>Master Setup</span>
                    <i class="bi bi-chevron-down ms-auto"></i>
                </a>
                <ul class="nav flex-column nav-submenu" id="masterSetupSubmenu">
                    <li class="nav-item">
                        <a class="nav-link @(ViewContext.RouteData.Values["Action"]?.ToString() == "Offers" ? "active" : "")" 
                           href="@Url.Action("Offers", "Admin")">
                            <i class="bi bi-tag"></i>
                            <span>Offers</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link @(ViewContext.RouteData.Values["Action"]?.ToString() == "Services" ? "active" : "")" 
                           href="@Url.Action("Services", "Admin")">
                            <i class="bi bi-briefcase"></i>
                            <span>Services</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link @(ViewContext.RouteData.Values["Action"]?.ToString()?.Contains("SubscriptionPlan") == true ? "active" : "")" 
                           href="@Url.Action("SubscriptionPlans", "Admin")">
                            <i class="bi bi-credit-card"></i>
                            <span>Subscription Plans</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link @(ViewContext.RouteData.Values["Action"]?.ToString() == "HelpQueries" ? "active" : "")" 
                           href="@Url.Action("HelpQueries", "Admin")">
                            <i class="bi bi-question-circle"></i>
                            <span>Help Queries</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link @(ViewContext.RouteData.Values["Action"]?.ToString() == "Companies" ? "active" : "")" 
                           href="@Url.Action("Companies", "Admin")">
                            <i class="bi bi-building"></i>
                            <span>Companies</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link @(ViewContext.RouteData.Values["Action"]?.ToString() == "PaymentHistory" ? "active" : "")" 
                           href="@Url.Action("PaymentHistory", "Admin")">
                            <i class="bi bi-receipt"></i>
                            <span>Payment History</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link @(ViewContext.RouteData.Values["Action"]?.ToString()?.Contains("Role") == true ? "active" : "")" 
                           href="@Url.Action("Roles", "Admin")">
                            <i class="bi bi-shield-check"></i>
                            <span>Roles</span>
                        </a>
                    </li>
                </ul>
            </li>

            <!-- User Management -->
            <li class="nav-item">
                <a class="nav-link @(ViewContext.RouteData.Values["Action"]?.ToString() == "Users" ? "active" : "")" 
                   href="@Url.Action("Users", "Admin")">
                    <i class="bi bi-people"></i>
                    <span>User Management</span>
                </a>
            </li>

            <!-- Reports -->
            <li class="nav-item">
                <a class="nav-link @(ViewContext.RouteData.Values["Action"]?.ToString() == "Reports" ? "active" : "")" 
                   href="@Url.Action("Reports", "Admin")">
                    <i class="bi bi-graph-up"></i>
                    <span>Reports</span>
                </a>
            </li>

            <!-- System Settings -->
            <li class="nav-item">
                <a class="nav-link @(ViewContext.RouteData.Values["Action"]?.ToString() == "SystemSettings" ? "active" : "")" 
                   href="@Url.Action("SystemSettings", "Admin")">
                    <i class="bi bi-gear"></i>
                    <span>System Settings</span>
                </a>
            </li>

            <!-- Notifications -->
            <li class="nav-item">
                <a class="nav-link @(ViewContext.RouteData.Values["Action"]?.ToString() == "Notifications" ? "active" : "")" 
                   href="@Url.Action("Notifications", "Admin")">
                    <i class="bi bi-bell"></i>
                    <span>Notifications</span>
                </a>
            </li>
        </ul>
    </div>

    <!-- Main Content -->
    <main class="admin-content">
        <!-- Alerts -->
        @if (TempData["Success"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <i class="bi bi-check-circle me-2"></i>
                <strong>Success!</strong> @TempData["Success"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }

        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <i class="bi bi-exclamation-triangle me-2"></i>
                <strong>Error!</strong> @TempData["Error"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }

        @if (TempData["Info"] != null)
        {
            <div class="alert alert-info alert-dismissible fade show" role="alert">
                <i class="bi bi-info-circle me-2"></i>
                <strong>Info:</strong> @TempData["Info"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }

        @if (TempData["Warning"] != null)
        {
            <div class="alert alert-warning alert-dismissible fade show" role="alert">
                <i class="bi bi-exclamation-triangle me-2"></i>
                <strong>Warning:</strong> @TempData["Warning"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }

        @RenderBody()
    </main>

    <!-- Bootstrap 5.3 JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    
    <!-- Custom Admin JavaScript -->
    <script>
        // Sidebar Toggle
        document.addEventListener('DOMContentLoaded', function() {
            const sidebarToggle = document.getElementById('sidebarToggle');
            const body = document.body;

            if (sidebarToggle) {
                sidebarToggle.addEventListener('click', function() {
                    body.classList.toggle('sidebar-collapsed');
                    
                    // Save state to localStorage
                    localStorage.setItem('sidebarCollapsed', body.classList.contains('sidebar-collapsed'));
                });
            }

            // Restore sidebar state
            const sidebarCollapsed = localStorage.getItem('sidebarCollapsed');
            if (sidebarCollapsed === 'true') {
                body.classList.add('sidebar-collapsed');
            }

            // Auto-expand Master Setup submenu if on related page
            const currentAction = '@ViewContext.RouteData.Values["Action"]';
            const masterSetupActions = ['Offers', 'Services', 'SubscriptionPlans', 'HelpQueries', 'Companies', 'PaymentHistory', 'Roles'];
            
            if (masterSetupActions.some(action => currentAction.includes(action))) {
                toggleSubmenu('masterSetupSubmenu', true);
            }
        });

        // Toggle Submenu
        function toggleSubmenu(submenuId, forceShow = false) {
            const submenu = document.getElementById(submenuId);
            if (submenu) {
                if (forceShow) {
                    submenu.classList.add('show');
                } else {
                    submenu.classList.toggle('show');
                }
            }
        }

        // Show loading overlay
        function showLoading() {
            document.getElementById('loadingOverlay').style.display = 'flex';
        }

        // Hide loading overlay
        function hideLoading() {
            document.getElementById('loadingOverlay').style.display = 'none';
        }

        // Auto-hide alerts after 5 seconds
        document.addEventListener('DOMContentLoaded', function() {
            const alerts = document.querySelectorAll('.alert:not(.alert-permanent)');
            alerts.forEach(alert => {
                setTimeout(() => {
                    const bsAlert = new bootstrap.Alert(alert);
                    bsAlert.close();
                }, 5000);
            });
        });

        // Global AJAX setup for loading states
        document.addEventListener('DOMContentLoaded', function() {
            // Show loading for form submissions
            const forms = document.querySelectorAll('form');
            forms.forEach(form => {
                form.addEventListener('submit', function() {
                    showLoading();
                });
            });

            // Hide loading when page loads
            window.addEventListener('load', function() {
                hideLoading();
            });
        });

        // Confirmation dialogs for delete actions
        function confirmDelete(message = 'Are you sure you want to delete this item?') {
            return confirm(message);
        }

        // Mobile sidebar toggle (for mobile devices only)
        document.addEventListener('DOMContentLoaded', function() {
            if (window.innerWidth <= 768) {
                const sidebarToggle = document.getElementById('sidebarToggle');
                const sidebar = document.querySelector('.admin-sidebar');
                
                if (sidebarToggle && sidebar) {
                    sidebarToggle.addEventListener('click', function() {
                        sidebar.classList.toggle('show');
                    });

                    // Close sidebar when clicking outside on mobile
                    document.addEventListener('click', function(e) {
                        if (!sidebar.contains(e.target) && !sidebarToggle.contains(e.target)) {
                            sidebar.classList.remove('show');
                        }
                    });
                }
            }
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
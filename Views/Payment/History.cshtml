@model List<OPROZ_Main.ViewModels.PaymentHistoryViewModel>
@{
    ViewData["Title"] = "Payment History";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h4 class="mb-0">
                        <i class="fas fa-history"></i> Payment History
                    </h4>
                    <div>
                        <button onclick="window.print()" class="btn btn-outline-secondary btn-sm">
                            <i class="fas fa-print"></i> Print
                        </button>
                        <a href="@Url.Action("Services", "Home")" class="btn btn-primary btn-sm">
                            <i class="fas fa-plus"></i> New Subscription
                        </a>
                    </div>
                </div>
                <div class="card-body">
                    @if (Model.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead class="table-dark">
                                    <tr>
                                        <th>Date</th>
                                        <th>Transaction ID</th>
                                        <th>Plan</th>
                                        <th>Amount</th>
                                        <th>Discount</th>
                                        <th>Final Amount</th>
                                        <th>Status</th>
                                        <th>Method</th>
                                        <th>Subscription Period</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var payment in Model)
                                    {
                                        <tr>
                                            <td>@payment.PaymentDate.ToString("dd MMM yyyy")</td>
                                            <td>
                                                <small class="text-muted">@payment.TransactionId</small>
                                                @if (!string.IsNullOrEmpty(payment.RazorpayPaymentId))
                                                {
                                                    <br><small class="text-info">@payment.RazorpayPaymentId</small>
                                                }
                                            </td>
                                            <td>@payment.PlanName</td>
                                            <td>₹@payment.Amount.ToString("N2")</td>
                                            <td>
                                                @if (payment.DiscountAmount > 0)
                                                {
                                                    <span class="text-success">₹@payment.DiscountAmount?.ToString("N2")</span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">-</span>
                                                }
                                            </td>
                                            <td><strong>₹@payment.FinalAmount.ToString("N2")</strong></td>
                                            <td>
                                                @switch (payment.Status)
                                                {
                                                    case OPROZ_Main.Models.PaymentStatus.Success:
                                                        <span class="badge bg-success">Success</span>
                                                        break;
                                                    case OPROZ_Main.Models.PaymentStatus.Pending:
                                                        <span class="badge bg-warning">Pending</span>
                                                        break;
                                                    case OPROZ_Main.Models.PaymentStatus.Failed:
                                                        <span class="badge bg-danger">Failed</span>
                                                        break;
                                                    case OPROZ_Main.Models.PaymentStatus.Refunded:
                                                        <span class="badge bg-info">Refunded</span>
                                                        break;
                                                    case OPROZ_Main.Models.PaymentStatus.Cancelled:
                                                        <span class="badge bg-secondary">Cancelled</span>
                                                        break;
                                                }
                                            </td>
                                            <td>
                                                @if (payment.Method.HasValue)
                                                {
                                                    @payment.Method.Value.ToString()
                                                }
                                                else
                                                {
                                                    <span class="text-muted">-</span>
                                                }
                                            </td>
                                            <td>
                                                @if (payment.SubscriptionStartDate.HasValue && payment.SubscriptionEndDate.HasValue)
                                                {
                                                    <small>
                                                        @payment.SubscriptionStartDate?.ToString("dd MMM yyyy")
                                                        <br>to<br>
                                                        @payment.SubscriptionEndDate?.ToString("dd MMM yyyy")
                                                    </small>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">-</span>
                                                }
                                            </td>
                                            <td>
                                                <div class="btn-group btn-group-sm" role="group">
                                                    @if (payment.Status == OPROZ_Main.Models.PaymentStatus.Success)
                                                    {
                                                        <button type="button" class="btn btn-outline-info" onclick="downloadInvoice(@payment.Id)" title="Download Invoice">
                                                            <i class="fas fa-download"></i>
                                                        </button>
                                                    }
                                                    <button type="button" class="btn btn-outline-secondary" onclick="viewDetails(@payment.Id)" title="View Details">
                                                        <i class="fas fa-eye"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <div class="mt-3">
                            <div class="row">
                                <div class="col-md-6">
                                    <p class="text-muted">
                                        <small>
                                            Total Payments: <strong>@Model.Count</strong> |
                                            Total Amount: <strong>₹@Model.Where(p => p.Status == OPROZ_Main.Models.PaymentStatus.Success).Sum(p => p.FinalAmount).ToString("N2")</strong>
                                        </small>
                                    </p>
                                </div>
                                <div class="col-md-6 text-end">
                                    <p class="text-muted">
                                        <small>
                                            Successful: <span class="text-success">@Model.Count(p => p.Status == OPROZ_Main.Models.PaymentStatus.Success)</span> |
                                            Failed: <span class="text-danger">@Model.Count(p => p.Status == OPROZ_Main.Models.PaymentStatus.Failed)</span> |
                                            Pending: <span class="text-warning">@Model.Count(p => p.Status == OPROZ_Main.Models.PaymentStatus.Pending)</span>
                                        </small>
                                    </p>
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-receipt fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">No payment history found</h5>
                            <p class="text-muted">You haven't made any payments yet.</p>
                            <a href="@Url.Action("Services", "Home")" class="btn btn-primary">
                                <i class="fas fa-plus"></i> Subscribe to a Plan
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal for payment details -->
<div class="modal fade" id="paymentDetailsModal" tabindex="-1" aria-labelledby="paymentDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="paymentDetailsModalLabel">Payment Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="paymentDetailsBody">
                <!-- Payment details will be loaded here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script>
    function viewDetails(paymentId) {
        // For now, just show basic info - could be enhanced to fetch more details
        const payment = @Html.Raw(Json.Serialize(Model));
        const selectedPayment = payment.find(p => p.id === paymentId);
        
        if (selectedPayment) {
            const modalBody = document.getElementById('paymentDetailsBody');
            modalBody.innerHTML = `
                <div class="row">
                    <div class="col-md-6">
                        <h6>Payment Information</h6>
                        <table class="table table-borderless table-sm">
                            <tr><td><strong>Transaction ID:</strong></td><td>${selectedPayment.transactionId}</td></tr>
                            <tr><td><strong>Razorpay Payment ID:</strong></td><td>${selectedPayment.razorpayPaymentId || '-'}</td></tr>
                            <tr><td><strong>Plan:</strong></td><td>${selectedPayment.planName}</td></tr>
                            <tr><td><strong>Status:</strong></td><td><span class="badge bg-${getStatusColor(selectedPayment.status)}">${selectedPayment.status}</span></td></tr>
                        </table>
                    </div>
                    <div class="col-md-6">
                        <h6>Amount Details</h6>
                        <table class="table table-borderless table-sm">
                            <tr><td><strong>Original Amount:</strong></td><td>₹${selectedPayment.amount.toFixed(2)}</td></tr>
                            <tr><td><strong>Discount:</strong></td><td>₹${(selectedPayment.discountAmount || 0).toFixed(2)}</td></tr>
                            <tr><td><strong>Final Amount:</strong></td><td><strong>₹${selectedPayment.finalAmount.toFixed(2)}</strong></td></tr>
                        </table>
                    </div>
                </div>
                ${selectedPayment.notes ? `<div class="mt-3"><h6>Notes:</h6><p class="text-muted">${selectedPayment.notes}</p></div>` : ''}
            `;
            
            const modal = new bootstrap.Modal(document.getElementById('paymentDetailsModal'));
            modal.show();
        }
    }

    function downloadInvoice(paymentId) {
        // Placeholder for invoice download functionality
        alert('Invoice download functionality will be implemented soon.');
    }

    function getStatusColor(status) {
        switch (status) {
            case 'Success': return 'success';
            case 'Pending': return 'warning';
            case 'Failed': return 'danger';
            case 'Refunded': return 'info';
            case 'Cancelled': return 'secondary';
            default: return 'secondary';
        }
    }
</script>

<style>
    @@media print {
        .btn, .modal, .card-header .btn {
            display: none !important;
        }
        .container {
            max-width: 100% !important;
        }
    }
</style>
@model OPROZ_Main.Models.HelpQuery
@{
    ViewData["Title"] = "Help Query Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="page-title-box">
                <h4 class="page-title">Help Query Details</h4>
                <div class="page-title-right">
                    <ol class="breadcrumb m-0">
                        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Admin")">Admin</a></li>
                        <li class="breadcrumb-item"><a href="@Url.Action("HelpQueries", "Admin")">Help Queries</a></li>
                        <li class="breadcrumb-item active">Details</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-8">
            <!-- Query Information -->
            <div class="card">
                <div class="card-header">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0">
                            <i class="fas fa-question-circle me-2"></i>Query #@Model.Id
                        </h5>
                        <div>
                            @switch (Model.Priority)
                            {
                                case OPROZ_Main.Models.QueryPriority.Critical:
                                    <span class="badge bg-danger">Critical</span>
                                    break;
                                case OPROZ_Main.Models.QueryPriority.High:
                                    <span class="badge bg-warning">High</span>
                                    break;
                                case OPROZ_Main.Models.QueryPriority.Medium:
                                    <span class="badge bg-info">Medium</span>
                                    break;
                                case OPROZ_Main.Models.QueryPriority.Low:
                                    <span class="badge bg-secondary">Low</span>
                                    break;
                            }
                            @switch (Model.Status)
                            {
                                case OPROZ_Main.Models.QueryStatus.Open:
                                    <span class="badge bg-warning">Open</span>
                                    break;
                                case OPROZ_Main.Models.QueryStatus.InProgress:
                                    <span class="badge bg-info">In Progress</span>
                                    break;
                                case OPROZ_Main.Models.QueryStatus.Resolved:
                                    <span class="badge bg-success">Resolved</span>
                                    break;
                                case OPROZ_Main.Models.QueryStatus.Closed:
                                    <span class="badge bg-secondary">Closed</span>
                                    break;
                            }
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <h6 class="fw-bold mb-2">Subject</h6>
                    <p class="mb-3">@Model.Subject</p>

                    <h6 class="fw-bold mb-2">Message</h6>
                    <div class="bg-light p-3 mb-3 rounded">
                        <p class="mb-0" style="white-space: pre-wrap;">@Model.Message</p>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <h6 class="fw-bold">Contact Information</h6>
                            <p class="mb-1"><strong>Name:</strong> @Model.Name</p>
                            <p class="mb-1"><strong>Email:</strong> <a href="mailto:@Model.Email">@Model.Email</a></p>
                            @if (!string.IsNullOrEmpty(Model.Phone))
                            {
                                <p class="mb-1"><strong>Phone:</strong> <a href="tel:@Model.Phone">@Model.Phone</a></p>
                            }
                            @if (Model.User != null)
                            {
                                <p class="mb-1">
                                    <strong>User Account:</strong> 
                                    <span class="badge bg-info">Registered User</span>
                                    <a href="@Url.Action("UserDetails", new { id = Model.UserId })" class="btn btn-sm btn-outline-info ms-2">View Profile</a>
                                </p>
                            }
                        </div>
                        <div class="col-md-6">
                            <h6 class="fw-bold">Query Details</h6>
                            <p class="mb-1"><strong>Category:</strong> 
                                @if (!string.IsNullOrEmpty(Model.Category))
                                {
                                    <span class="badge bg-light text-dark">@Model.Category</span>
                                }
                                else
                                {
                                    <span class="text-muted">Uncategorized</span>
                                }
                            </p>
                            <p class="mb-1"><strong>Created:</strong> @Model.CreatedAt.ToString("MMMM dd, yyyy 'at' HH:mm")</p>
                            @if (Model.UpdatedAt.HasValue)
                            {
                                <p class="mb-1"><strong>Last Updated:</strong> @Model.UpdatedAt.Value.ToString("MMMM dd, yyyy 'at' HH:mm")</p>
                            }
                            @if (Model.ResolvedAt.HasValue)
                            {
                                <p class="mb-1"><strong>Resolved:</strong> @Model.ResolvedAt.Value.ToString("MMMM dd, yyyy 'at' HH:mm")</p>
                            }
                        </div>
                    </div>

                    @if (!string.IsNullOrEmpty(Model.AdminResponse))
                    {
                        <hr>
                        <h6 class="fw-bold mb-2">Admin Response</h6>
                        <div class="bg-success bg-opacity-10 p-3 rounded border border-success">
                            <p class="mb-0" style="white-space: pre-wrap;">@Model.AdminResponse</p>
                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="col-lg-4">
            <!-- Update Query -->
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-edit me-2"></i>Update Query
                    </h5>
                </div>
                <div class="card-body">
                    <form asp-action="UpdateHelpQuery" method="post">
                        <input type="hidden" name="id" value="@Model.Id" />
                        
                        <div class="mb-3">
                            <label for="status" class="form-label">Status</label>
                            <select name="status" class="form-select" required>
                                @foreach (var status in Enum.GetValues<OPROZ_Main.Models.QueryStatus>())
                                {
                                    <option value="@status" selected="@(Model.Status == status)">@status</option>
                                }
                            </select>
                        </div>

                        <div class="mb-3">
                            <label for="priority" class="form-label">Priority</label>
                            <select name="priority" class="form-select" required>
                                @foreach (var priority in Enum.GetValues<OPROZ_Main.Models.QueryPriority>())
                                {
                                    <option value="@priority" selected="@(Model.Priority == priority)">@priority</option>
                                }
                            </select>
                        </div>

                        <div class="mb-3">
                            <label for="category" class="form-label">Category</label>
                            <select name="category" class="form-select">
                                <option value="">Uncategorized</option>
                                <option value="General" selected="@(Model.Category == "General")">General</option>
                                <option value="Technical" selected="@(Model.Category == "Technical")">Technical</option>
                                <option value="Billing" selected="@(Model.Category == "Billing")">Billing</option>
                                <option value="Feature Request" selected="@(Model.Category == "Feature Request")">Feature Request</option>
                                <option value="Bug Report" selected="@(Model.Category == "Bug Report")">Bug Report</option>
                            </select>
                        </div>

                        <div class="mb-3">
                            <label for="adminResponse" class="form-label">Admin Response</label>
                            <textarea name="adminResponse" class="form-control" rows="4" placeholder="Enter your response to the user...">@Model.AdminResponse</textarea>
                        </div>

                        <button type="submit" class="btn btn-primary w-100">
                            <i class="fas fa-save me-2"></i>Update Query
                        </button>
                    </form>
                </div>
            </div>

            <!-- Quick Actions -->
            <div class="card mt-3">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-bolt me-2"></i>Quick Actions
                    </h5>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-2">
                        <button type="button" class="btn btn-success" onclick="quickUpdate('Resolved')">
                            <i class="fas fa-check me-2"></i>Mark as Resolved
                        </button>
                        
                        <button type="button" class="btn btn-info" onclick="quickUpdate('InProgress')">
                            <i class="fas fa-play me-2"></i>Mark as In Progress
                        </button>
                        
                        <button type="button" class="btn btn-warning" onclick="quickUpdate('Open')">
                            <i class="fas fa-undo me-2"></i>Reopen Query
                        </button>
                        
                        <hr>
                        
                        <button type="button" class="btn btn-outline-primary" onclick="copyQueryInfo()">
                            <i class="fas fa-copy me-2"></i>Copy Query Info
                        </button>
                        
                        <a href="mailto:@Model.Email?subject=Re: @Model.Subject" class="btn btn-outline-success">
                            <i class="fas fa-envelope me-2"></i>Reply by Email
                        </a>
                        
                        @if (!string.IsNullOrEmpty(Model.Phone))
                        {
                            <a href="tel:@Model.Phone" class="btn btn-outline-info">
                                <i class="fas fa-phone me-2"></i>Call Customer
                            </a>
                        }
                        
                        <hr>
                        
                        <button type="button" class="btn btn-outline-danger" onclick="deleteQuery(@Model.Id, '@Model.Subject')">
                            <i class="fas fa-trash me-2"></i>Delete Query
                        </button>
                    </div>
                </div>
            </div>

            <!-- Query Timeline -->
            <div class="card mt-3">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-history me-2"></i>Timeline
                    </h5>
                </div>
                <div class="card-body">
                    <div class="timeline">
                        <div class="timeline-item">
                            <div class="timeline-marker bg-primary"></div>
                            <div class="timeline-content">
                                <h6 class="timeline-title">Query Created</h6>
                                <p class="timeline-time">@Model.CreatedAt.ToString("MMM dd, yyyy 'at' HH:mm")</p>
                                <p class="timeline-text">Initial query submitted by @Model.Name</p>
                            </div>
                        </div>
                        
                        @if (Model.UpdatedAt.HasValue)
                        {
                            <div class="timeline-item">
                                <div class="timeline-marker bg-info"></div>
                                <div class="timeline-content">
                                    <h6 class="timeline-title">Query Updated</h6>
                                    <p class="timeline-time">@Model.UpdatedAt.Value.ToString("MMM dd, yyyy 'at' HH:mm")</p>
                                    <p class="timeline-text">Status changed to @Model.Status</p>
                                </div>
                            </div>
                        }
                        
                        @if (Model.ResolvedAt.HasValue)
                        {
                            <div class="timeline-item">
                                <div class="timeline-marker bg-success"></div>
                                <div class="timeline-content">
                                    <h6 class="timeline-title">Query Resolved</h6>
                                    <p class="timeline-time">@Model.ResolvedAt.Value.ToString("MMM dd, yyyy 'at' HH:mm")</p>
                                    <p class="timeline-text">Query marked as resolved</p>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <!-- Back to List -->
            <div class="mt-3">
                <a href="@Url.Action("HelpQueries")" class="btn btn-outline-secondary w-100">
                    <i class="fas fa-arrow-left me-2"></i>Back to Help Queries
                </a>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this help query?</p>
                <p class="text-danger"><small>This action cannot be undone.</small></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let deleteQueryId = 0;

        function quickUpdate(status) {
            const form = document.querySelector('form');
            const statusSelect = form.querySelector('select[name="status"]');
            statusSelect.value = status;
            form.submit();
        }

        function copyQueryInfo() {
            const queryInfo = `Query #@Model.Id
Subject: @Model.Subject
From: @Model.Name (@Model.Email)
Priority: @Model.Priority
Status: @Model.Status
Created: @Model.CreatedAt.ToString("MMM dd, yyyy 'at' HH:mm")

Message:
@Model.Message`;

            navigator.clipboard.writeText(queryInfo).then(function() {
                showToast('success', 'Query information copied to clipboard!');
            }, function() {
                showToast('error', 'Failed to copy query information.');
            });
        }

        function deleteQuery(id, subject) {
            deleteQueryId = id;
            new bootstrap.Modal(document.getElementById('deleteModal')).show();
        }

        document.getElementById('confirmDeleteBtn').addEventListener('click', function () {
            if (deleteQueryId > 0) {
                fetch('@Url.Action("DeleteHelpQuery")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                    },
                    body: JSON.stringify({ id: deleteQueryId })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        showToast('success', data.message);
                        setTimeout(() => {
                            window.location.href = '@Url.Action("HelpQueries")';
                        }, 1500);
                    } else {
                        showToast('error', data.message);
                    }
                })
                .catch(error => {
                    showToast('error', 'An error occurred while deleting the query.');
                });

                bootstrap.Modal.getInstance(document.getElementById('deleteModal')).hide();
            }
        });

        function showToast(type, message) {
            const toastHtml = `
                <div class="toast align-items-center text-white bg-${type === 'success' ? 'success' : 'danger'} border-0" role="alert" aria-live="assertive" aria-atomic="true">
                    <div class="d-flex">
                        <div class="toast-body">${message}</div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                </div>
            `;
            
            let toastContainer = document.getElementById('toast-container');
            if (!toastContainer) {
                toastContainer = document.createElement('div');
                toastContainer.id = 'toast-container';
                toastContainer.className = 'toast-container position-fixed top-0 end-0 p-3';
                toastContainer.style.zIndex = '1055';
                document.body.appendChild(toastContainer);
            }
            
            toastContainer.insertAdjacentHTML('beforeend', toastHtml);
            const toastElement = toastContainer.lastElementChild;
            const toast = new bootstrap.Toast(toastElement);
            toast.show();
            
            toastElement.addEventListener('hidden.bs.toast', () => {
                toastElement.remove();
            });
        }
    </script>

    <style>
        .timeline {
            position: relative;
        }
        
        .timeline-item {
            position: relative;
            padding-left: 30px;
            margin-bottom: 20px;
        }
        
        .timeline-marker {
            position: absolute;
            left: 0;
            top: 0;
            width: 12px;
            height: 12px;
            border-radius: 50%;
        }
        
        .timeline-item:not(:last-child)::before {
            content: '';
            position: absolute;
            left: 5px;
            top: 12px;
            width: 2px;
            height: calc(100% + 8px);
            background-color: #dee2e6;
        }
        
        .timeline-title {
            font-size: 0.9rem;
            margin-bottom: 2px;
        }
        
        .timeline-time {
            font-size: 0.8rem;
            color: #6c757d;
            margin-bottom: 5px;
        }
        
        .timeline-text {
            font-size: 0.85rem;
            margin-bottom: 0;
        }
    </style>
}
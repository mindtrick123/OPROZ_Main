@model SubscriptionPlan
@{
    ViewData["Title"] = "Edit Subscription Plan";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<!-- Page Title -->
<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h1 class="page-title">Edit Subscription Plan</h1>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="@Url.Action("Index", "Admin")">Admin</a></li>
                <li class="breadcrumb-item"><a href="@Url.Action("SubscriptionPlans")">Subscription Plans</a></li>
                <li class="breadcrumb-item"><a href="@Url.Action("SubscriptionPlanDetails", new { id = Model.Id })">@Model.Name</a></li>
                <li class="breadcrumb-item active" aria-current="page">Edit</li>
            </ol>
        </nav>
    </div>
    <div>
        <a href="@Url.Action("SubscriptionPlanDetails", new { id = Model.Id })" class="btn btn-outline-info">
            <i class="bi bi-eye me-2"></i>View Details
        </a>
        <a href="@Url.Action("SubscriptionPlans")" class="btn btn-outline-secondary">
            <i class="bi bi-arrow-left me-2"></i>Back to List
        </a>
    </div>
</div>

<!-- Status Alert -->
@if (!Model.IsActive)
{
    <div class="alert alert-warning" role="alert">
        <i class="bi bi-exclamation-triangle me-2"></i>
        <strong>Note:</strong> This plan is currently inactive. Consider activating it after making updates.
    </div>
}

<!-- Form Card -->
<div class="row">
    <div class="col-lg-8">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="mb-0">
                    <i class="bi bi-credit-card me-2"></i>Edit Subscription Plan
                </h5>
                <div>
                    <span class="badge bg-@(Model.IsActive ? "success" : "danger")">
                        @(Model.IsActive ? "Active" : "Inactive")
                    </span>
                    @if (Model.IsPopular)
                    {
                        <span class="badge bg-warning text-dark ms-1">Popular</span>
                    }
                </div>
            </div>
            <div class="card-body">
                <form asp-action="EditSubscriptionPlan" method="post" id="planForm" novalidate>
                    <input asp-for="Id" type="hidden" />
                    <input asp-for="CreatedAt" type="hidden" />
                    
                    <div asp-validation-summary="ModelOnly" class="alert alert-danger" style="display: none;"></div>

                    <!-- Basic Information Section -->
                    <div class="mb-4">
                        <h6 class="text-primary border-bottom pb-2 mb-3">
                            <i class="bi bi-info-circle me-1"></i>Basic Information
                        </h6>
                        
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Name" class="form-label required">Plan Name</label>
                                    <input asp-for="Name" class="form-control" placeholder="Enter plan name" />
                                    <span asp-validation-for="Name" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="ServiceId" class="form-label required">Service</label>
                                    <select asp-for="ServiceId" class="form-select">
                                        <option value="">Select a service</option>
                                        @foreach (var service in ViewBag.Services)
                                        {
                                            <option value="@service.Id" selected="@(service.Id == Model.ServiceId)">@service.Name</option>
                                        }
                                    </select>
                                    <span asp-validation-for="ServiceId" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Description" class="form-label">Description</label>
                            <textarea asp-for="Description" class="form-control" rows="3" 
                                      placeholder="Describe the subscription plan..."></textarea>
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>
                    </div>

                    <!-- Plan Configuration Section -->
                    <div class="mb-4">
                        <h6 class="text-primary border-bottom pb-2 mb-3">
                            <i class="bi bi-gear me-1"></i>Plan Configuration
                        </h6>
                        
                        <div class="row">
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label asp-for="Type" class="form-label required">Plan Type</label>
                                    <select asp-for="Type" class="form-select">
                                        <option value="Basic" selected="@(Model.Type == PlanType.Basic)">Basic</option>
                                        <option value="Standard" selected="@(Model.Type == PlanType.Standard)">Standard</option>
                                        <option value="Premium" selected="@(Model.Type == PlanType.Premium)">Premium</option>
                                        <option value="Enterprise" selected="@(Model.Type == PlanType.Enterprise)">Enterprise</option>
                                    </select>
                                    <span asp-validation-for="Type" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label asp-for="Duration" class="form-label required">Duration</label>
                                    <select asp-for="Duration" class="form-select">
                                        <option value="Monthly" selected="@(Model.Duration == PlanDuration.Monthly)">Monthly</option>
                                        <option value="Quarterly" selected="@(Model.Duration == PlanDuration.Quarterly)">Quarterly</option>
                                        <option value="SemiAnnual" selected="@(Model.Duration == PlanDuration.SemiAnnual)">Semi-Annual</option>
                                        <option value="Annual" selected="@(Model.Duration == PlanDuration.Annual)">Annual</option>
                                    </select>
                                    <span asp-validation-for="Duration" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label asp-for="Price" class="form-label required">Price ($)</label>
                                    <div class="input-group">
                                        <span class="input-group-text">$</span>
                                        <input asp-for="Price" class="form-control" type="number" step="0.01" min="0" placeholder="0.00" />
                                    </div>
                                    <span asp-validation-for="Price" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Limits Section -->
                    <div class="mb-4">
                        <h6 class="text-primary border-bottom pb-2 mb-3">
                            <i class="bi bi-sliders me-1"></i>Plan Limits
                        </h6>
                        
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="MaxUsers" class="form-label required">Maximum Users</label>
                                    <input asp-for="MaxUsers" class="form-control" type="number" min="1" placeholder="e.g., 10" />
                                    <span asp-validation-for="MaxUsers" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="MaxStorage" class="form-label required">Storage Limit (MB)</label>
                                    <input asp-for="MaxStorage" class="form-control" type="number" min="0" placeholder="e.g., 5120" />
                                    <small class="form-text text-muted">1024 MB = 1 GB</small>
                                    <span asp-validation-for="MaxStorage" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Features Section -->
                    <div class="mb-4">
                        <h6 class="text-primary border-bottom pb-2 mb-3">
                            <i class="bi bi-list-check me-1"></i>Plan Features
                        </h6>
                        
                        <div class="mb-3">
                            <label asp-for="Features" class="form-label">Features (JSON format)</label>
                            <textarea asp-for="Features" class="form-control" rows="4" 
                                      placeholder='["Feature 1", "Feature 2", "Feature 3"]'></textarea>
                            <small class="form-text text-muted">Enter features as a JSON array. Example: ["Basic support", "Email integration", "Monthly reports"]</small>
                            <span asp-validation-for="Features" class="text-danger"></span>
                        </div>
                    </div>

                    <!-- Settings Section -->
                    <div class="mb-4">
                        <h6 class="text-primary border-bottom pb-2 mb-3">
                            <i class="bi bi-toggles me-1"></i>Plan Settings
                        </h6>
                        
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-check mb-3">
                                    <input asp-for="IsActive" class="form-check-input" type="checkbox" />
                                    <label class="form-check-label" asp-for="IsActive">
                                        Active Plan
                                    </label>
                                    <div class="form-text">Inactive plans are not available for new subscriptions</div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-check mb-3">
                                    <input asp-for="IsPopular" class="form-check-input" type="checkbox" />
                                    <label class="form-check-label" asp-for="IsPopular">
                                        Popular Plan
                                    </label>
                                    <div class="form-text">Popular plans are highlighted to customers</div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Form Actions -->
                    <div class="d-flex gap-2 justify-content-end">
                        <a href="@Url.Action("SubscriptionPlanDetails", new { id = Model.Id })" class="btn btn-outline-secondary">
                            <i class="bi bi-x-circle me-2"></i>Cancel
                        </a>
                        <button type="submit" class="btn btn-primary" id="submitBtn">
                            <i class="bi bi-check-circle me-2"></i>Update Plan
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Sidebar -->
    <div class="col-lg-4">
        <!-- Current Plan Stats -->
        <div class="card mb-4">
            <div class="card-header">
                <h5 class="mb-0">
                    <i class="bi bi-graph-up me-2"></i>Current Plan Performance
                </h5>
            </div>
            <div class="card-body">
                <div class="row text-center">
                    <div class="col-6 border-end">
                        <h4 class="text-primary mb-0">@(Model.PaymentHistories?.Count(p => p.Status == PaymentStatus.Success) ?? 0)</h4>
                        <small class="text-muted">Subscriptions</small>
                    </div>
                    <div class="col-6">
                        @{
                            var totalRevenue = Model.PaymentHistories?.Where(p => p.Status == PaymentStatus.Success).Sum(p => p.FinalAmount) ?? 0;
                        }
                        <h4 class="text-success mb-0">$@totalRevenue.ToString("N0")</h4>
                        <small class="text-muted">Revenue</small>
                    </div>
                </div>
                <hr>
                <div class="small text-muted">
                    <div class="d-flex justify-content-between">
                        <span>Created:</span>
                        <span>@Model.CreatedAt.ToString("MMM dd, yyyy")</span>
                    </div>
                    @if (Model.UpdatedAt.HasValue)
                    {
                        <div class="d-flex justify-content-between">
                            <span>Updated:</span>
                            <span>@Model.UpdatedAt.Value.ToString("MMM dd, yyyy")</span>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Quick Actions -->
        <div class="card mb-4">
            <div class="card-header">
                <h5 class="mb-0">
                    <i class="bi bi-lightning me-2"></i>Quick Actions
                </h5>
            </div>
            <div class="card-body">
                <div class="d-grid gap-2">
                    <a href="@Url.Action("SubscriptionPlanDetails", new { id = Model.Id })" class="btn btn-outline-info">
                        <i class="bi bi-eye me-2"></i>View Details
                    </a>
                    
                    @if (Model.PaymentHistories?.Any(p => p.Status == PaymentStatus.Success) == true)
                    {
                        <a href="@Url.Action("PaymentHistory", new { subscriptionPlanId = Model.Id })" class="btn btn-outline-primary">
                            <i class="bi bi-receipt me-2"></i>View Subscriptions
                        </a>
                    }
                    
                    <a href="@Url.Action("ServiceDetails", new { id = Model.ServiceId })" class="btn btn-outline-success">
                        <i class="bi bi-briefcase me-2"></i>View Service
                    </a>
                </div>
            </div>
        </div>

        <!-- Help Information -->
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0">
                    <i class="bi bi-lightbulb me-2"></i>Update Guidelines
                </h5>
            </div>
            <div class="card-body">
                <div class="mb-3">
                    <h6><i class="bi bi-exclamation-triangle text-warning me-1"></i>Price Changes</h6>
                    <p class="small text-muted">Price changes will only affect new subscriptions. Existing subscribers keep their current pricing.</p>
                </div>
                
                <div class="mb-3">
                    <h6><i class="bi bi-people text-info me-1"></i>User Limits</h6>
                    <p class="small text-muted">Changing user limits will affect all current and future subscribers immediately.</p>
                </div>

                <div class="mb-3">
                    <h6><i class="bi bi-toggle-off text-danger me-1"></i>Deactivating Plans</h6>
                    <p class="small text-muted">Deactivating a plan will prevent new subscriptions but won't affect existing ones.</p>
                </div>

                <div class="alert alert-info">
                    <i class="bi bi-info-circle me-2"></i>
                    <small>Changes are applied immediately. Test carefully before making major modifications.</small>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        $(document).ready(function() {
            // Form validation setup
            $('#planForm').validate({
                rules: {
                    Name: {
                        required: true,
                        minlength: 2,
                        maxlength: 200
                    },
                    ServiceId: {
                        required: true
                    },
                    Price: {
                        required: true,
                        min: 0
                    },
                    MaxUsers: {
                        required: true,
                        min: 1
                    },
                    MaxStorage: {
                        required: true,
                        min: 0
                    }
                },
                messages: {
                    Name: {
                        required: "Plan name is required",
                        minlength: "Plan name must be at least 2 characters",
                        maxlength: "Plan name cannot exceed 200 characters"
                    },
                    ServiceId: {
                        required: "Please select a service"
                    },
                    Price: {
                        required: "Price is required",
                        min: "Price cannot be negative"
                    },
                    MaxUsers: {
                        required: "Maximum users is required",
                        min: "Must allow at least 1 user"
                    },
                    MaxStorage: {
                        required: "Storage limit is required",
                        min: "Storage limit cannot be negative"
                    }
                },
                errorElement: "span",
                errorClass: "text-danger",
                highlight: function(element) {
                    $(element).addClass("is-invalid");
                },
                unhighlight: function(element) {
                    $(element).removeClass("is-invalid");
                }
            });

            // Form submission handling
            $('#planForm').on('submit', function(e) {
                if ($(this).valid()) {
                    $('#submitBtn').prop('disabled', true)
                                   .html('<span class="spinner-border spinner-border-sm me-2"></span>Updating...');
                    showLoading();
                }
            });

            // Features JSON validation
            $('#Features').on('blur', function() {
                const value = $(this).val().trim();
                if (value) {
                    try {
                        JSON.parse(value);
                        $(this).removeClass('is-invalid').addClass('is-valid');
                    } catch (e) {
                        $(this).removeClass('is-valid').addClass('is-invalid');
                        // Add custom error message
                        let errorSpan = $(this).siblings('.text-danger');
                        if (errorSpan.length === 0) {
                            errorSpan = $('<span class="text-danger"></span>');
                            $(this).after(errorSpan);
                        }
                        errorSpan.text('Invalid JSON format');
                    }
                }
            });

            // Storage unit helper
            $('#MaxStorage').on('input', function() {
                const value = parseInt($(this).val()) || 0;
                const gb = (value / 1024).toFixed(2);
                
                let helperText = $(this).siblings('.storage-helper');
                if (helperText.length === 0) {
                    helperText = $('<small class="form-text text-info storage-helper"></small>');
                    $(this).after(helperText);
                }
                
                if (value > 0) {
                    helperText.text(`≈ ${gb} GB`);
                } else {
                    helperText.text('');
                }
            });

            // Initialize storage helper
            $('#MaxStorage').trigger('input');

            // Price formatting
            $('#Price').on('blur', function() {
                const value = parseFloat($(this).val());
                if (!isNaN(value)) {
                    $(this).val(value.toFixed(2));
                }
            });

            // Track changes for unsaved warning
            let originalData = $('#planForm').serialize();
            
            $(window).on('beforeunload', function() {
                if ($('#planForm').serialize() !== originalData) {
                    return 'You have unsaved changes. Are you sure you want to leave?';
                }
            });

            // Remove beforeunload when form is submitted
            $('#planForm').on('submit', function() {
                $(window).off('beforeunload');
            });
        });
    </script>
}

<style>
    .required::after {
        content: " *";
        color: #dc3545;
    }
    
    .form-check-input:checked {
        background-color: #198754;
        border-color: #198754;
    }
    
    .is-valid {
        border-color: #198754;
    }
    
    .is-invalid {
        border-color: #dc3545;
    }
    
    .input-group-text {
        background-color: #f8f9fa;
        border-color: #ced4da;
    }
    
    .alert-info {
        background-color: #cff4fc;
        border-color: #b6effb;
        color: #055160;
    }
</style>
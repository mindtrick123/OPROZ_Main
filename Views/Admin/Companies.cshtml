@model List<Company>
@{
    ViewData["Title"] = "Companies Management";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<!-- Page Title -->
<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h1 class="page-title">Companies Management</h1>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="@Url.Action("Index", "Admin")">Admin</a></li>
                <li class="breadcrumb-item active" aria-current="page">Companies</li>
            </ol>
        </nav>
    </div>
    <div>
        <a href="@Url.Action("CreateCompany")" class="btn btn-primary">
            <i class="bi bi-plus-circle me-2"></i>Create New Company
        </a>
    </div>
</div>

<!-- Statistics Cards -->
<div class="row mb-4">
    <div class="col-md-3">
        <div class="card">
            <div class="card-body text-center">
                <i class="bi bi-building text-primary fs-2 mb-2"></i>
                <h4 class="card-title mb-0">@ViewBag.TotalCount</h4>
                <p class="card-text text-muted">Total Companies</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card">
            <div class="card-body text-center">
                <i class="bi bi-check-circle text-success fs-2 mb-2"></i>
                <h4 class="card-title mb-0">@Model.Count(c => c.IsActive)</h4>
                <p class="card-text text-muted">Active Companies</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card">
            <div class="card-body text-center">
                <i class="bi bi-x-circle text-danger fs-2 mb-2"></i>
                <h4 class="card-title mb-0">@Model.Count(c => !c.IsActive)</h4>
                <p class="card-text text-muted">Inactive Companies</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card">
            <div class="card-body text-center">
                <i class="bi bi-people text-info fs-2 mb-2"></i>
                <h4 class="card-title mb-0">@Model.Sum(c => c.Users?.Count ?? 0)</h4>
                <p class="card-text text-muted">Total Users</p>
            </div>
        </div>
    </div>
</div>

<!-- Filters -->
<div class="card mb-4">
    <div class="card-body">
        <form method="get" id="filterForm">
            <div class="row g-3">
                <div class="col-md-4">
                    <label for="search" class="form-label">Search</label>
                    <input type="text" class="form-control" id="search" name="search" 
                           value="@ViewBag.Search" placeholder="Search by name, website, or description...">
                </div>
                <div class="col-md-3">
                    <label for="isActive" class="form-label">Status</label>
                    <select class="form-select" id="isActive" name="isActive">
                        <option value="">All Status</option>
                        <option value="true" selected="@(ViewBag.IsActive == true)">Active</option>
                        <option value="false" selected="@(ViewBag.IsActive == false)">Inactive</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label class="form-label">&nbsp;</label>
                    <div class="d-flex gap-2">
                        <button type="submit" class="btn btn-outline-primary">
                            <i class="bi bi-funnel me-1"></i>Filter
                        </button>
                        <a href="@Url.Action("Companies")" class="btn btn-outline-secondary">
                            <i class="bi bi-x-circle me-1"></i>Clear
                        </a>
                    </div>
                </div>
                <div class="col-md-2">
                    <label class="form-label">&nbsp;</label>
                    <div>
                        <button type="button" class="btn btn-outline-success w-100" onclick="exportData()">
                            <i class="bi bi-download me-1"></i>Export
                        </button>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Companies Table -->
<div class="card">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="mb-0">Companies List</h5>
        <span class="badge bg-primary">Total: @ViewBag.TotalCount companies</span>
    </div>
    <div class="card-body p-0">
        @if (Model.Any())
        {
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead class="table-light">
                        <tr>
                            <th>Company</th>
                            <th>Contact Info</th>
                            <th>Users</th>
                            <th>Revenue</th>
                            <th>Status</th>
                            <th>Created</th>
                            <th class="text-end">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var company in Model)
                        {
                            <tr>
                                <td>
                                    <div class="d-flex align-items-center">
                                        <div class="avatar-sm bg-primary text-white rounded-circle d-flex align-items-center justify-content-center me-3">
                                            <i class="bi bi-building"></i>
                                        </div>
                                        <div>
                                            <h6 class="mb-1">
                                                <a href="@Url.Action("CompanyDetails", new { id = company.Id })" 
                                                   class="text-decoration-none">@company.Name</a>
                                            </h6>
                                            @if (!string.IsNullOrEmpty(company.Description))
                                            {
                                                <small class="text-muted">@(company.Description.Length > 50 ? company.Description.Substring(0, 50) + "..." : company.Description)</small>
                                            }
                                            @if (!string.IsNullOrEmpty(company.Website))
                                            {
                                                <br><small><i class="bi bi-globe me-1"></i><a href="@company.Website" target="_blank" class="text-decoration-none">@company.Website</a></small>
                                            }
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    @if (!string.IsNullOrEmpty(company.Phone))
                                    {
                                        <div><i class="bi bi-telephone me-1"></i>@company.Phone</div>
                                    }
                                    @if (!string.IsNullOrEmpty(company.Address))
                                    {
                                        <small class="text-muted">
                                            <i class="bi bi-geo-alt me-1"></i>
                                            @company.Address
                                            @if (!string.IsNullOrEmpty(company.City))
                                            {
                                                <text>, @company.City</text>
                                            }
                                        </small>
                                    }
                                </td>
                                <td>
                                    <span class="badge bg-info">@(company.Users?.Count ?? 0) users</span>
                                </td>
                                <td>
                                    @{
                                        var totalRevenue = company.PaymentHistories?.Where(p => p.Status == PaymentStatus.Success).Sum(p => p.FinalAmount) ?? 0;
                                    }
                                    <strong class="text-success">$@totalRevenue.ToString("N2")</strong>
                                </td>
                                <td>
                                    @if (company.IsActive)
                                    {
                                        <span class="badge bg-success">Active</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger">Inactive</span>
                                    }
                                </td>
                                <td>
                                    <small class="text-muted">@company.CreatedAt.ToString("MMM dd, yyyy")</small>
                                </td>
                                <td class="text-end">
                                    <div class="btn-group" role="group">
                                        <a href="@Url.Action("CompanyDetails", new { id = company.Id })" 
                                           class="btn btn-sm btn-outline-info" title="View Details">
                                            <i class="bi bi-eye"></i>
                                        </a>
                                        <a href="@Url.Action("EditCompany", new { id = company.Id })" 
                                           class="btn btn-sm btn-outline-primary" title="Edit">
                                            <i class="bi bi-pencil"></i>
                                        </a>
                                        <button type="button" class="btn btn-sm btn-outline-@(company.IsActive ? "warning" : "success")" 
                                                onclick="toggleStatus(@company.Id, '@company.Name')" 
                                                title="@(company.IsActive ? "Deactivate" : "Activate")">
                                            <i class="bi bi-@(company.IsActive ? "pause" : "play")"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center py-5">
                <i class="bi bi-building text-muted" style="font-size: 3rem;"></i>
                <h5 class="mt-3 text-muted">No companies found</h5>
                <p class="text-muted">Try adjusting your filters or create a new company.</p>
                <a href="@Url.Action("CreateCompany")" class="btn btn-primary">
                    <i class="bi bi-plus-circle me-2"></i>Create First Company
                </a>
            </div>
        }
    </div>
</div>

<!-- Pagination -->
@if (ViewBag.TotalPages > 1)
{
    <nav aria-label="Companies pagination" class="mt-4">
        <ul class="pagination justify-content-center">
            @if (ViewBag.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Companies", new { page = ViewBag.CurrentPage - 1, search = ViewBag.Search, isActive = ViewBag.IsActive })">
                        <i class="bi bi-chevron-left"></i> Previous
                    </a>
                </li>
            }

            @for (int i = Math.Max(1, ViewBag.CurrentPage - 2); i <= Math.Min(ViewBag.TotalPages, ViewBag.CurrentPage + 2); i++)
            {
                <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Companies", new { page = i, search = ViewBag.Search, isActive = ViewBag.IsActive })">@i</a>
                </li>
            }

            @if (ViewBag.CurrentPage < ViewBag.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Companies", new { page = ViewBag.CurrentPage + 1, search = ViewBag.Search, isActive = ViewBag.IsActive })">
                        Next <i class="bi bi-chevron-right"></i>
                    </a>
                </li>
            }
        </ul>
    </nav>
}

@section Scripts {
    <script>
        // Toggle company status
        async function toggleStatus(companyId, companyName) {
            if (!confirm(`Are you sure you want to toggle the status of "${companyName}"?`)) {
                return;
            }

            showLoading();
            try {
                const response = await fetch(`@Url.Action("ToggleCompanyStatus")`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                    },
                    body: JSON.stringify({ id: companyId })
                });

                const result = await response.json();
                if (result.success) {
                    // Show success message
                    showAlert('success', result.message);
                    // Reload page after short delay
                    setTimeout(() => location.reload(), 1500);
                } else {
                    showAlert('error', result.message || 'Failed to toggle company status');
                }
            } catch (error) {
                console.error('Error:', error);
                showAlert('error', 'An error occurred while updating company status');
            } finally {
                hideLoading();
            }
        }

        // Export data
        function exportData() {
            const searchParams = new URLSearchParams(window.location.search);
            searchParams.set('export', 'true');
            window.open(`@Url.Action("Companies")?${searchParams.toString()}`, '_blank');
        }

        // Auto-submit search after typing
        let searchTimeout;
        document.getElementById('search').addEventListener('input', function() {
            clearTimeout(searchTimeout);
            searchTimeout = setTimeout(() => {
                document.getElementById('filterForm').submit();
            }, 500);
        });

        // Show alert messages
        function showAlert(type, message) {
            const alertHtml = `
                <div class="alert alert-${type === 'error' ? 'danger' : 'success'} alert-dismissible fade show" role="alert">
                    <i class="bi bi-${type === 'error' ? 'exclamation-triangle' : 'check-circle'} me-2"></i>
                    <strong>${type === 'error' ? 'Error!' : 'Success!'}</strong> ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            `;
            
            // Insert at the top of the main content
            const mainContent = document.querySelector('main .admin-content');
            const firstChild = mainContent.firstElementChild;
            const alertDiv = document.createElement('div');
            alertDiv.innerHTML = alertHtml;
            mainContent.insertBefore(alertDiv.firstElementChild, firstChild);
        }
    </script>
}

<style>
    .avatar-sm {
        width: 40px;
        height: 40px;
        font-size: 0.875rem;
    }
    
    .table th {
        font-weight: 600;
        color: #495057;
        border-top: none;
    }
    
    .btn-group .btn {
        border-radius: 0.375rem;
        margin-right: 2px;
    }
    
    .btn-group .btn:last-child {
        margin-right: 0;
    }
</style>
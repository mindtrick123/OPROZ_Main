@model OPROZ_Main.ViewModels.UserManagementViewModel
@{
    ViewData["Title"] = "User Management";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="page-title-box">
                <h4 class="page-title">User Management</h4>
                <div class="page-title-right">
                    <ol class="breadcrumb m-0">
                        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Admin")">Admin</a></li>
                        <li class="breadcrumb-item active">Users</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>

    <!-- Search and Filter Section -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <form method="get" asp-action="Users">
                        <div class="row">
                            <div class="col-md-3">
                                <div class="mb-3">
                                    <label asp-for="SearchFilter.SearchTerm" class="form-label">Search</label>
                                    <input asp-for="SearchFilter.SearchTerm" class="form-control" placeholder="Name, email, or phone..." />
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="mb-3">
                                    <label asp-for="SearchFilter.Status" class="form-label">Status</label>
                                    <select asp-for="SearchFilter.Status" asp-items="Html.GetEnumSelectList<OPROZ_Main.ViewModels.UserStatus>()" class="form-select"></select>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="mb-3">
                                    <label asp-for="SearchFilter.SortBy" class="form-label">Sort By</label>
                                    <select asp-for="SearchFilter.SortBy" asp-items="Html.GetEnumSelectList<OPROZ_Main.ViewModels.UserSortBy>()" class="form-select"></select>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="mb-3">
                                    <label asp-for="SearchFilter.SortOrder" class="form-label">Order</label>
                                    <select asp-for="SearchFilter.SortOrder" asp-items="Html.GetEnumSelectList<OPROZ_Main.ViewModels.SortOrder>()" class="form-select"></select>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="mb-3">
                                    <label class="form-label">&nbsp;</label>
                                    <div class="d-grid gap-2 d-md-flex">
                                        <button type="submit" class="btn btn-primary me-md-2">
                                            <i class="mdi mdi-magnify"></i> Search
                                        </button>
                                        <a href="@Url.Action("Users", "Admin")" class="btn btn-secondary">
                                            <i class="mdi mdi-refresh"></i> Reset
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Users Table -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h5 class="card-title mb-0">Users (@Model.TotalUsers total)</h5>
                        <div>
                            <a href="@Url.Action("Reports", "Admin")" class="btn btn-success btn-sm">
                                <i class="mdi mdi-file-export"></i> Export
                            </a>
                        </div>
                    </div>

                    @if (Model.Users.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead class="table-dark">
                                    <tr>
                                        <th>User</th>
                                        <th>Contact</th>
                                        <th>Status</th>
                                        <th>Roles</th>
                                        <th>Subscription</th>
                                        <th>Total Spent</th>
                                        <th>Joined</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var user in Model.Users)
                                    {
                                        <tr>
                                            <td>
                                                <div>
                                                    <strong>@user.FirstName @user.LastName</strong>
                                                    @if (!string.IsNullOrEmpty(user.CompanyName))
                                                    {
                                                        <br /><small class="text-muted">@user.CompanyName</small>
                                                    }
                                                </div>
                                            </td>
                                            <td>
                                                <div>
                                                    <a href="mailto:@user.Email">@user.Email</a>
                                                    @if (!string.IsNullOrEmpty(user.PhoneNumber))
                                                    {
                                                        <br /><small>@user.PhoneNumber</small>
                                                    }
                                                </div>
                                            </td>
                                            <td>
                                                <div>
                                                    @if (user.IsActive)
                                                    {
                                                        <span class="badge bg-success">Active</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge bg-danger">Inactive</span>
                                                    }
                                                    @if (user.EmailConfirmed)
                                                    {
                                                        <span class="badge bg-primary">Verified</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge bg-warning">Unverified</span>
                                                    }
                                                </div>
                                                @if (user.LastLoginAt.HasValue)
                                                {
                                                    <small class="text-muted">Last: @user.LastLoginAt.Value.ToString("MMM dd, yyyy")</small>
                                                }
                                                else
                                                {
                                                    <small class="text-muted">Never logged in</small>
                                                }
                                            </td>
                                            <td>
                                                @foreach (var role in user.Roles)
                                                {
                                                    <span class="badge bg-info me-1">@role</span>
                                                }
                                            </td>
                                            <td>
                                                <div>
                                                    <strong>@user.CurrentPlan</strong>
                                                    <br /><small>@user.SubscriptionCount subscriptions</small>
                                                    @if (user.SubscriptionExpiry.HasValue)
                                                    {
                                                        <br /><small class="text-muted">Expires: @user.SubscriptionExpiry.Value.ToString("MMM dd, yyyy")</small>
                                                    }
                                                </div>
                                            </td>
                                            <td>
                                                <strong>$@user.TotalSpent.ToString("N2")</strong>
                                            </td>
                                            <td>
                                                <small>@user.CreatedAt.ToString("MMM dd, yyyy")</small>
                                            </td>
                                            <td>
                                                <div class="btn-group" role="group">
                                                    <a href="@Url.Action("UserDetails", "Admin", new { id = user.Id })" 
                                                       class="btn btn-sm btn-outline-primary" title="View Details">
                                                        <i class="mdi mdi-eye"></i>
                                                    </a>
                                                    <a href="@Url.Action("EditUser", "Admin", new { id = user.Id })" 
                                                       class="btn btn-sm btn-outline-warning" title="Edit User">
                                                        <i class="mdi mdi-pencil"></i>
                                                    </a>
                                                    @if (user.IsActive)
                                                    {
                                                        <button type="button" class="btn btn-sm btn-outline-danger" 
                                                                onclick="suspendUser('@user.Id', '@user.FirstName @user.LastName')" title="Suspend User">
                                                            <i class="mdi mdi-account-cancel"></i>
                                                        </button>
                                                    }
                                                    else
                                                    {
                                                        <button type="button" class="btn btn-sm btn-outline-success" 
                                                                onclick="reactivateUser('@user.Id', '@user.FirstName @user.LastName')" title="Reactivate User">
                                                            <i class="mdi mdi-account-check"></i>
                                                        </button>
                                                    }
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <!-- Pagination -->
                        @if (Model.TotalPages > 1)
                        {
                            <nav aria-label="User list pagination">
                                <ul class="pagination justify-content-center">
                                    @if (Model.CurrentPage > 1)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="@Url.Action("Users", "Admin", new { page = Model.CurrentPage - 1, SearchFilter = Model.SearchFilter })">Previous</a>
                                        </li>
                                    }

                                    @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                                    {
                                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                            <a class="page-link" href="@Url.Action("Users", "Admin", new { page = i, SearchFilter = Model.SearchFilter })">@i</a>
                                        </li>
                                    }

                                    @if (Model.CurrentPage < Model.TotalPages)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="@Url.Action("Users", "Admin", new { page = Model.CurrentPage + 1, SearchFilter = Model.SearchFilter })">Next</a>
                                        </li>
                                    }
                                </ul>
                            </nav>
                        }
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <h5>No users found</h5>
                            <p class="text-muted">Try adjusting your search criteria or filters.</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Suspend User Modal -->
<div class="modal fade" id="suspendUserModal" tabindex="-1" aria-labelledby="suspendUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="suspendUserModalLabel">Suspend User</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to suspend <strong id="suspendUserName"></strong>?</p>
                <div class="mb-3">
                    <label for="suspendReason" class="form-label">Reason for suspension</label>
                    <textarea class="form-control" id="suspendReason" rows="3" placeholder="Enter reason for suspension..."></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmSuspendBtn">Suspend User</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let selectedUserId = '';

        function suspendUser(userId, userName) {
            selectedUserId = userId;
            document.getElementById('suspendUserName').textContent = userName;
            document.getElementById('suspendReason').value = '';
            new bootstrap.Modal(document.getElementById('suspendUserModal')).show();
        }

        function reactivateUser(userId, userName) {
            if (confirm(`Are you sure you want to reactivate ${userName}?`)) {
                fetch('@Url.Action("ReactivateUser", "Admin")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                    },
                    body: `id=${encodeURIComponent(userId)}`
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        showAlert('success', data.message || 'User reactivated successfully');
                        location.reload();
                    } else {
                        showAlert('danger', data.message || 'Failed to reactivate user');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showAlert('danger', 'An error occurred while reactivating the user');
                });
            }
        }

        document.getElementById('confirmSuspendBtn').addEventListener('click', function() {
            const reason = document.getElementById('suspendReason').value.trim();
            if (!reason) {
                showAlert('warning', 'Please provide a reason for suspension');
                return;
            }

            fetch('@Url.Action("SuspendUser", "Admin")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                },
                body: `id=${encodeURIComponent(selectedUserId)}&reason=${encodeURIComponent(reason)}`
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showAlert('success', data.message || 'User suspended successfully');
                    bootstrap.Modal.getInstance(document.getElementById('suspendUserModal')).hide();
                    location.reload();
                } else {
                    showAlert('danger', data.message || 'Failed to suspend user');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showAlert('danger', 'An error occurred while suspending the user');
            });
        });

        function showAlert(type, message) {
            const alertHtml = `
                <div class="alert alert-${type} alert-dismissible fade show" role="alert">
                    ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            `;
            document.querySelector('.container-fluid').insertAdjacentHTML('afterbegin', alertHtml);
        }
    </script>
}

<style>
    .page-title-box {
        padding: 20px 0;
    }

    .card {
        border: none;
        box-shadow: 0 0.75rem 1.5rem rgba(18, 38, 63, 0.03);
        margin-bottom: 24px;
    }

    .table th {
        border-top: none;
        font-weight: 600;
        font-size: 0.875rem;
        color: #6c757d;
        vertical-align: middle;
    }

    .table td {
        vertical-align: middle;
        border-top: 1px solid #e9ecef;
    }

    .badge {
        font-size: 0.75rem;
    }

    .btn-group .btn {
        border-radius: 0.25rem;
        margin-right: 2px;
    }
</style>
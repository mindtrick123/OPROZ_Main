@model OPROZ_Main.Models.Offer
@{
    ViewData["Title"] = "Edit Offer";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="page-title-box">
                <h4 class="page-title">Edit Offer</h4>
                <div class="page-title-right">
                    <ol class="breadcrumb m-0">
                        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Admin")">Admin</a></li>
                        <li class="breadcrumb-item"><a href="@Url.Action("Offers", "Admin")">Offers</a></li>
                        <li class="breadcrumb-item active">Edit</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-8 mx-auto">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-edit me-2"></i>Edit Offer: @Model.Name
                    </h5>
                </div>
                <div class="card-body">
                    <form asp-action="EditOffer" method="post" id="editOfferForm">
                        <input asp-for="Id" type="hidden" />
                        <input asp-for="CreatedAt" type="hidden" />
                        <input asp-for="UsedCount" type="hidden" />
                        
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger d-none"></div>

                        <!-- Usage Statistics (if offer has been used) -->
                        @if (Model.UsedCount > 0)
                        {
                            <div class="alert alert-info">
                                <h6 class="alert-heading">
                                    <i class="fas fa-info-circle me-2"></i>Usage Information
                                </h6>
                                <p class="mb-2">This offer has been used <strong>@Model.UsedCount time(s)</strong>.</p>
                                @if (Model.MaxUsageCount.HasValue)
                                {
                                    <p class="mb-0">Usage limit: @Model.UsedCount / @Model.MaxUsageCount</p>
                                }
                                <hr class="mb-2">
                                <small class="text-muted">Be careful when modifying offer details as it may affect existing users.</small>
                            </div>
                        }

                        <!-- Basic Information -->
                        <div class="row">
                            <div class="col-md-8">
                                <div class="mb-3">
                                    <label asp-for="Name" class="form-label">Offer Name <span class="text-danger">*</span></label>
                                    <input asp-for="Name" class="form-control" placeholder="Enter offer name">
                                    <span asp-validation-for="Name" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label asp-for="Code" class="form-label">Offer Code <span class="text-danger">*</span></label>
                                    <input asp-for="Code" class="form-control" placeholder="SAVE20" style="text-transform: uppercase;">
                                    <span asp-validation-for="Code" class="text-danger"></span>
                                    <small class="form-text text-muted">Must be unique</small>
                                </div>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Description" class="form-label">Description</label>
                            <textarea asp-for="Description" class="form-control" rows="3" placeholder="Enter offer description"></textarea>
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>

                        <!-- Offer Configuration -->
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Type" class="form-label">Offer Type <span class="text-danger">*</span></label>
                                    <select asp-for="Type" class="form-select" id="offerType">
                                        <option value="">Select offer type</option>
                                        <option value="@OPROZ_Main.Models.OfferType.Percentage">Percentage Discount</option>
                                        <option value="@OPROZ_Main.Models.OfferType.FixedAmount">Fixed Amount Discount</option>
                                        <option value="@OPROZ_Main.Models.OfferType.FreeMonth">Free Month(s)</option>
                                    </select>
                                    <span asp-validation-for="Type" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Value" class="form-label">Value <span class="text-danger">*</span></label>
                                    <div class="input-group">
                                        <span class="input-group-text" id="valuePrefix">$</span>
                                        <input asp-for="Value" class="form-control" placeholder="0" min="0" step="0.01">
                                        <span class="input-group-text" id="valueSuffix" style="display: none;">%</span>
                                    </div>
                                    <span asp-validation-for="Value" class="text-danger"></span>
                                    <small class="form-text text-muted" id="valueHelp">Enter the discount value</small>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="ServiceId" class="form-label">Applicable Service</label>
                                    <select asp-for="ServiceId" class="form-select">
                                        <option value="">All Services</option>
                                        @if (ViewBag.Services != null)
                                        {
                                            @foreach (var service in (IEnumerable<dynamic>)ViewBag.Services)
                                            {
                                                <option value="@service.Id">@service.Name</option>
                                            }
                                        }
                                    </select>
                                    <span asp-validation-for="ServiceId" class="text-danger"></span>
                                    <small class="form-text text-muted">Leave empty to apply to all services</small>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="MinOrderAmount" class="form-label">Minimum Order Amount</label>
                                    <div class="input-group">
                                        <span class="input-group-text">$</span>
                                        <input asp-for="MinOrderAmount" class="form-control" placeholder="0.00" min="0" step="0.01">
                                    </div>
                                    <span asp-validation-for="MinOrderAmount" class="text-danger"></span>
                                    <small class="form-text text-muted">Optional minimum order requirement</small>
                                </div>
                            </div>
                        </div>

                        <!-- Validity Period -->
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="StartDate" class="form-label">Start Date <span class="text-danger">*</span></label>
                                    <input asp-for="StartDate" type="date" class="form-control">
                                    <span asp-validation-for="StartDate" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="EndDate" class="form-label">End Date <span class="text-danger">*</span></label>
                                    <input asp-for="EndDate" type="date" class="form-control">
                                    <span asp-validation-for="EndDate" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <!-- Usage Limitations -->
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="MaxUsageCount" class="form-label">Maximum Usage Count</label>
                                    <input asp-for="MaxUsageCount" class="form-control" placeholder="Unlimited" min="@Model.UsedCount">
                                    <span asp-validation-for="MaxUsageCount" class="text-danger"></span>
                                    <small class="form-text text-muted">
                                        @if (Model.UsedCount > 0)
                                        {
                                            <span>Minimum value: @Model.UsedCount (current usage)</span>
                                        }
                                        else
                                        {
                                            <span>Leave empty for unlimited usage</span>
                                        }
                                    </small>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3 d-flex align-items-center">
                                    <div class="form-check form-switch">
                                        <input asp-for="IsActive" class="form-check-input" type="checkbox">
                                        <label asp-for="IsActive" class="form-check-label">
                                            Active
                                        </label>
                                    </div>
                                    <small class="form-text text-muted ms-3">Offer availability status</small>
                                </div>
                            </div>
                        </div>

                        <!-- Metadata -->
                        <div class="card bg-light mb-3">
                            <div class="card-body">
                                <h6 class="card-title">
                                    <i class="fas fa-info-circle me-2"></i>Offer Metadata
                                </h6>
                                <div class="row">
                                    <div class="col-md-6">
                                        <p class="mb-1"><strong>Created:</strong> @Model.CreatedAt.ToString("MMM dd, yyyy 'at' HH:mm")</p>
                                        <p class="mb-1"><strong>Times Used:</strong> @Model.UsedCount</p>
                                    </div>
                                    <div class="col-md-6">
                                        @if (Model.UpdatedAt.HasValue)
                                        {
                                            <p class="mb-1"><strong>Last Updated:</strong> @Model.UpdatedAt.Value.ToString("MMM dd, yyyy 'at' HH:mm")</p>
                                        }
                                        <p class="mb-1">
                                            <strong>Status:</strong> 
                                            @if (Model.EndDate < DateTime.Now)
                                            {
                                                <span class="badge bg-danger">Expired</span>
                                            }
                                            else if (Model.StartDate > DateTime.Now)
                                            {
                                                <span class="badge bg-warning">Not Started</span>
                                            }
                                            else if (Model.IsActive)
                                            {
                                                <span class="badge bg-success">Active</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-secondary">Inactive</span>
                                            }
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Form Actions -->
                        <div class="d-flex justify-content-between">
                            <div>
                                <a href="@Url.Action("Offers")" class="btn btn-outline-secondary">
                                    <i class="fas fa-arrow-left me-2"></i>Back to List
                                </a>
                                <a href="@Url.Action("OfferDetails", new { id = Model.Id })" class="btn btn-outline-info">
                                    <i class="fas fa-eye me-2"></i>View Details
                                </a>
                            </div>
                            <div>
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-save me-2"></i>Update Offer
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const offerTypeSelect = document.getElementById('offerType');
            const valuePrefix = document.getElementById('valuePrefix');
            const valueSuffix = document.getElementById('valueSuffix');
            const valueHelp = document.getElementById('valueHelp');
            const codeInput = document.querySelector('input[name="Code"]');

            // Auto-uppercase offer code
            codeInput.addEventListener('input', function() {
                this.value = this.value.toUpperCase();
            });

            // Handle offer type change
            offerTypeSelect.addEventListener('change', updateValueFieldDisplay);
            
            function updateValueFieldDisplay() {
                const selectedType = offerTypeSelect.value;
                
                switch (selectedType) {
                    case '@OPROZ_Main.Models.OfferType.Percentage':
                        valuePrefix.style.display = 'none';
                        valueSuffix.style.display = 'block';
                        valueHelp.textContent = 'Enter percentage value (e.g., 20 for 20% off)';
                        break;
                    case '@OPROZ_Main.Models.OfferType.FixedAmount':
                        valuePrefix.style.display = 'block';
                        valueSuffix.style.display = 'none';
                        valueHelp.textContent = 'Enter fixed discount amount';
                        break;
                    case '@OPROZ_Main.Models.OfferType.FreeMonth':
                        valuePrefix.style.display = 'none';
                        valueSuffix.style.display = 'none';
                        valueHelp.textContent = 'Enter number of free months';
                        break;
                    default:
                        valuePrefix.style.display = 'block';
                        valueSuffix.style.display = 'none';
                        valueHelp.textContent = 'Enter the discount value';
                }
            }

            // Initial call to set up the form based on current values
            updateValueFieldDisplay();
        });

        // Form validation
        document.getElementById('editOfferForm').addEventListener('submit', function(e) {
            const startDate = new Date(document.querySelector('input[name="StartDate"]').value);
            const endDate = new Date(document.querySelector('input[name="EndDate"]').value);
            
            if (endDate <= startDate) {
                e.preventDefault();
                alert('End date must be after start date.');
                return false;
            }
            
            const value = parseFloat(document.querySelector('input[name="Value"]').value);
            const type = document.querySelector('select[name="Type"]').value;
            
            if (type === '@OPROZ_Main.Models.OfferType.Percentage' && value > 100) {
                e.preventDefault();
                alert('Percentage discount cannot be more than 100%.');
                return false;
            }

            const maxUsageCount = document.querySelector('input[name="MaxUsageCount"]').value;
            const usedCount = @Model.UsedCount;
            
            if (maxUsageCount && parseInt(maxUsageCount) < usedCount) {
                e.preventDefault();
                alert('Maximum usage count cannot be less than current usage (' + usedCount + ').');
                return false;
            }
        });
    </script>
}